@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<KetoRecipies.Models.Product>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = "Keto Store";
}
@if (!SignInManager.IsSignedIn(User))
{
    <div class="container text-center">
        <p style="font-size:20px;" class="mt-3"><a asp-area="Identity" asp-page="/Account/Register">Register</a> or <a asp-area="Identity" asp-page="/Account/Login">Login</a> to add a blog post, save your favorite recipes and add your own recipes to the site</p>
    </div>
}

<div class="container mb-3">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span style="color:white;" class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    @if (TempData["sort"] != null && TempData["sort"].ToString() == "newest")
                    {
                        <a style="color:white; font-weight:bold;" class="nav-link" asp-action="Index" asp-route-sort="newest" asp-route-SearchString="@TempData["SearchString"]" asp-route-filter="@TempData["filter"]">Newest First</a>
                    }
                    else
                    {
                        <a style="color:white;" class="nav-link" asp-action="Index" asp-route-sort="newest" asp-route-SearchString="@TempData["SearchString"]" asp-route-filter="@TempData["filter"]">Newest First</a>
                    }
                </li>
                <li class="nav-item">
                    @if (TempData["sort"] != null && TempData["sort"].ToString() == "oldest")
                    {
                        <a style="color:white; font-weight:bold;" class="nav-link" asp-action="Index" asp-route-sort="oldest" asp-route-SearchString="@TempData["SearchString"]" asp-route-filter="@TempData["filter"]">Oldest First</a>
                    }
                    else
                    {
                        <a style="color:white;" class="nav-link" asp-action="Index" asp-route-sort="oldest" asp-route-SearchString="@TempData["SearchString"]" asp-route-filter="@TempData["filter"]">Oldest First</a>
                    }
                </li>
                <li class="nav-item">
                    @if (TempData["sort"] != null && TempData["sort"].ToString() == "mostLikes")
                    {
                        <a style="color:white; font-weight:bold;" class="nav-link" asp-action="Index" asp-route-sort="mostLikes" asp-route-SearchString="@TempData["SearchString"]" asp-route-filter="@TempData["filter"]">Highest Rating</a>
                    }
                    else
                    {
                        <a style="color:white;" class="nav-link" asp-action="Index" asp-route-sort="mostLikes" asp-route-SearchString="@TempData["SearchString"]" asp-route-filter="@TempData["filter"]">Most Likes</a>
                    }
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color:white;">
                        Filter By:
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a style="color:deepskyblue;" class="nav-link" asp-action="Index" asp-route-filter="Breakfast" asp-route-sort="@TempData["sort"]" asp-route-SearchString="@TempData["SearchString"]">Cooking Gear</a>
                        <a style="color:deepskyblue;" class="nav-link" asp-action="Index" asp-route-filter="Lunch" asp-route-sort="@TempData["sort"]" asp-route-SearchString="@TempData["SearchString"]">Supplements</a>
                        <a style="color:deepskyblue;" class="nav-link" asp-action="Index" asp-route-filter="Dinner" asp-route-sort="@TempData["sort"]" asp-route-SearchString="@TempData["SearchString"]">Organic Foods</a>
                        <a style="color:deepskyblue;" class="nav-link" asp-action="Index" asp-route-filter="Side" asp-route-sort="@TempData["sort"]" asp-route-SearchString="@TempData["SearchString"]">Swag</a>
                        <a style="color:deepskyblue;" class="nav-link" asp-action="Index">All</a>
                    </div>
                </li>
            </ul>
            <form asp-action="Index" asp-route-filter="@TempData["filter"]" asp-route-sort="@TempData["sort"]" class="form-inline my-2 my-lg-0">
                <input name="SearchString" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" value="@TempData["SearchString"]" />
                <span class="input-group-btn">
                    <button class="btn btn-primary my-2 my-sm-0" type="submit">Search</button>
                </span>
            </form>
        </div>
    </nav>
</div>


@if (Model.PageCount > 1)
{
    <div class="row justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, filter = TempData["filter"], SearchString = TempData["SearchString"] }), new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
   {
       DisplayItemSliceAndTotal = false,
       ContainerDivClasses = new[] { "navigation" },
       LiElementClasses = new[] { "page-item" },
       PageClasses = new[] { "page-link" },
   })
    </div>
}