@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<KetoRecipies.Models.Recipe>
@using KetoRecipies.Models.Interfaces
@inject IDbList dbList
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> userManager
@if (TempData["Error"] != null)
{
    <div>
        <h2 style="color:lightgreen;"><strong>Error:</strong> @TempData["Error"].ToString()</h2>
    </div>
}
@if (!SignInManager.IsSignedIn(User))
{
    <h3 style="color:deepskyblue;">Register or Login to Save Your Favorite Recipes or Add Your Recipe to the List</h3>
}
@if (SignInManager.IsSignedIn(User))
{
    <a asp-action="Create" style="color:deepskyblue;"><h3 class="mt-3">Add a Recipe</h3></a>
}
<form asp-action="Index" class="card shadow-none card-sm mb-3 mt-3">
    <div class="card-body row no-gutters align-items-center">
        <div class="col">
            <input name="SearchString" class="form-control" type="search" placeholder="Author, Recipe Name or Ingridients" aria-label="Search">
        </div>
        <!--end of col-->
        <div class="col-auto">
            <button class="btn menu-right-btn border shadow-none" type="submit" value="Search">Search</button>
        </div>
        <!--end of col-->
    </div>
</form>
@if (Model.Count() == 0)
{
    <h3>Sorry no results, make sure your spelling is correct</h3>
    <a asp-action="Index">Back to Recipes</a>
}
<div class="container row ml-0">
    @foreach (var item in Model)
    {
        <div class="card-deck col">
            <div class="card mb-3" style="width: 20rem;">
                <a id="@item.Label"></a>
                <img src="@item.ImageUrl" class="card-img-top" />
                <div class="card-body" style="align-self:center; width: 20rem;">
                    <h6 class="card-header text-center" style="background-color:white; font-weight:bold;">
                        @item.Label
                    </h6>
                    @if (item.SourceUrl != null)
                    {
                        <p class="card-subtitle mt-2">
                            <span style="font-weight:bold;">See Full Details:</span> <a href="@item.SourceUrl" target="_blank">Click Here</a>
                        </p>
                    }
                    @if (item.SourceUrl == null)
                    {
                        <p class="card-subtitle mt-2">
                            <span style="font-weight:bold;">See Full Details:</span> <a asp-action="Details" asp-route-id="@item.ID">Click Here</a>
                        </p>
                    }
                    <hr />
                    <p style="font-weight:bold;">Nutrient Facts Per Serving:</p>
                    <p>Calories: @item.TotalCaloriesServ, Carbs: @item.TotalCarbsServ, Fat: @item.TotalFatServ</p>
                    <hr />
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var fav = dbList.GetFavorites();
                        var userID = userManager.GetUserId(User);
                        var fav2 = fav.FirstOrDefault(f => f.RecipeID == item.ID && f.UserID == userID);
                        if (fav2 == null)
                        {
                            <form asp-action="AddFavorite" method="post">
                                <input name="Id" type="hidden" value="@item.ID" />
                                <button type="submit" class="btn border">Add to Favorites</button>
                            </form>
                        }
                        else if (fav2 != null)
                        {
                            <form asp-action="RemoveFavorite" method="post">
                                <input name="Id" type="hidden" value="@item.ID" />
                                <button type="submit" class="btn border">Remove from Favorites</button>
                            </form>
                        }
                    }
                    <p class="card-title mt-2">
                        By: @item.Source
                    </p>
                    <p>Likes: @item.LikeCount | Dislikes: @item.DisLikeCount</p>
                </div>
            </div>

        </div>
    }
</div>
@if (Model.PageCount > 1)
{
    <div class="card card center text-center mb-1 row">
        <div class="card-body center parent col-sm">
            <p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount </p>
            <div class="pagination" style="margin-left: 400px">
                <ul class="pagination">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), X.PagedList.Mvc.Common.PagedListRenderOptionsBase.OnlyShowFivePagesAtATime)
                </ul>
            </div>
        </div>
    </div>
}