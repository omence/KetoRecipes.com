@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<KetoRecipies.Models.Recipe>
@using KetoRecipies.Models.Interfaces
@inject IDbList dbList
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> userManager
@if (TempData["Error"] != null)
{
    <div>
        <h2 style="color:lightgreen;"><strong>Error:</strong> @TempData["Error"].ToString()</h2>
    </div>
}
@if (!SignInManager.IsSignedIn(User))
{
    <h3 class="mt-3" style="color:deepskyblue;">Register or Login to Save Your Favorite Recipes and Add Your Own Recipes to the Site</h3>
}
@if (SignInManager.IsSignedIn(User))
{
    <h3 class="mt-3"><a asp-action="Create" style="color:deepskyblue;"><i class="fas mr-2 fa-plus"></i>Add a Recipe</a></h3>
}
<form asp-action="Index" class="card shadow-none card-sm mb-3 mt-3">
    <div class="card-body row no-gutters align-items-center">
        <div class="col">
            <input name="SearchString" class="form-control" type="search" placeholder="Author, Recipe Name or Ingridients" aria-label="Search">
        </div>
        <!--end of col-->
        <div class="col-auto">
            <button class="btn menu-right-btn border shadow-none" type="submit" value="Search"><i style="color:black;" class="fa mr-1 fa-search"></i>Search</button>
        </div>
        <!--end of col-->
    </div>
</form>
@if (Model.Count() == 0)
{
    <h3>Sorry no results, make sure your spelling is correct</h3>
    <a asp-action="Index">Back to Recipes</a>
}
<div class="container row ml-0" style="justify-content:center;">
    @foreach (var item in Model)
    {
        <div class="card-deck col">
            <div class="card mb-3" style="width: 20rem">
                <a id="@item.Label"></a>
                @if (item.SourceUrl != null)
                {
                    <a href="@item.SourceUrl"><img src="@item.ImageUrl" alt="@item.Label" class="card-img-top" /></a>
                }

                @if (item.SourceUrl == null)
                {
                    <a asp-action="Details" asp-route-id="@item.ID"><img src="@item.ImageUrl" alt="@item.Label" class="card-img-top" /></a>
                }
                <div class="card-body" style="align-self:center; width: 20rem;">

                    @if (item.SourceUrl != null)
                    {

                        <a class="mt-2" href="@item.SourceUrl" target="_blank">
                            <h5 class="card-header text-center" style="background-color:white; font-weight:bold;">
                                @item.Label
                            </h5>
                        </a>

                    }
                    @if (item.SourceUrl == null)
                    {

                        <a class="mt-2" asp-action="Details" asp-route-id="@item.ID">
                            <h5 class="card-header text-center" style="background-color:white; font-weight:bold;">
                                @item.Label
                            </h5>
                        </a>

                    }

                    <h6 style="font-weight:bold;"><i class="fab mr-1 fa-1x fa-nutritionix mt-3"></i>Nutrient Facts Per Serving:</h6>
                    <p>Calories: @item.TotalCaloriesServ, Carbs: @item.TotalCarbsServ, Fat: @item.TotalFatServ</p>
                    <hr />
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var fav = dbList.GetFavorites();
                        var userID = userManager.GetUserId(User);
                        var fav2 = fav.FirstOrDefault(f => f.RecipeID == item.ID && f.UserID == userID);
                        if (fav2 == null)
                        {
                            <form asp-action="AddFavorite" method="post">
                                <input name="Id" type="hidden" value="@item.ID" />
                                @if (TempData["searchString"] != null)
                                {
                                    <input name="searchString" type="hidden" value="@TempData["searchString"].ToString()" />
                                }
                                <input name="Page" type="hidden" value="@Model.PageNumber" />
                                <button type="submit" class="btn border"><i style="color:red;" class="far mr-2 fa-1x fa-heart"></i>Add to Favorites</button>
                            </form>
                        }
                        else if (fav2 != null)
                        {
                            <form asp-action="RemoveFavorite" method="post">
                                <input name="Id" type="hidden" value="@item.ID" />
                                @if (TempData["searchString"] != null)
                                {
                                    <input name="searchString" type="hidden" value="@TempData["searchString"].ToString()" />
                                }
                                <input name="Page" type="hidden" value="@Model.PageNumber" />
                                <button style="background-color:deepskyblue; color:white;" type="submit" class="btn border rmvfav"><i style="color:red;" class="fas fa-1x mr-1 fa-heart"></i>Remove from Favorites</button>
                            </form>
                        }
                    }
                    <h5 class="card-title mt-2">
                        By: <a asp-action="Index" asp-route-SearchString="@item.Source">@item.Source</a>
                    </h5>
                    <div class="card-footer text-muted" style="bottom:1px;">
                        <h5><i style="color:deepskyblue;" class="fa mr-1 fa-thumbs-up"></i> @item.LikeCount | <i style="color:deepskyblue;" class="fa mr-1 fa-thumbs-down"></i> @item.DisLikeCount</h5>
                    </div>
                </div>
            </div>

        </div>
    }
</div>
@if (Model.PageCount > 1)
{
    <div class="row justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
          {
              DisplayItemSliceAndTotal = false,
              ContainerDivClasses = new[] { "navigation" },
              LiElementClasses = new[] { "page-item" },
              PageClasses = new[] { "page-link" },
          })
    </div>
}
